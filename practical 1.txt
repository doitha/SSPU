// practical 1 

#include <xc.h>

// Configuration bits
#pragma config FOSC = HS        // Oscillator Selection bits (HS oscillator)
#pragma config WDTE = OFF       // Watchdog Timer Enable bit (WDT disabled)
#pragma config PWRTE = OFF      // Power-up Timer Enable bit (PWRT disabled)
#pragma config BOREN = ON       // Brown-out Reset Enable bit (BOR enabled)
#pragma config LVP = OFF        // Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit (RB3 is digital I/O, HV on MCLR must be used for programming)
#pragma config CPD = OFF        // Data EEPROM Memory Code Protection bit (Data EEPROM code protection off)
#pragma config WRT = OFF        // Flash Program Memory Write Enable bits (Write protection off; all program memory may be written to by EECON control)
#pragma config CP = OFF         // Flash Program Memory Code Protection bit (Code protection off)

#define _XTAL_FREQ 20000000     // This is the speed your controller is running at

void main(void) {
    TRISB = 0;                  // PORTB is output
    PORTB = 0;                  // Turn off all LEDs initially

    while(1) {
        for(int i = 0; i < 8; i++) {
            PORTB = 1 << i;      // Shift a '1' bit through each LED
            __delay_ms(500);     // Wait for 500 milliseconds
        }
    }
}