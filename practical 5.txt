// practical 5 pwm 
#include <xc.h>
#include <pic.h>
#define _XTAL_FREQ 20000000

// Configuration bits
#pragma config FOSC = HS        // Oscillator Selection bits (HS oscillator)
#pragma config WDTE = OFF       // Watchdog Timer Enable bit (WDT disabled)
#pragma config PWRTE = OFF      // Power-up Timer Enable bit (PWRT disabled)
#pragma config BOREN = ON       // Brown-out Reset Enable bit (BOR enabled)
#pragma config LVP = OFF        // Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit (RB3 is digital I/O, HV on MCLR must be used for programming)
#pragma config CPD = OFF        // Data EEPROM Memory Code Protection bit (Data EEPROM code protection off)
#pragma config WRT = OFF        // Flash Program Memory Write Enable bits (Write protection off; all program memory may be written to by EECON control)
#pragma config CP = OFF         // Flash Program Memory Code Protection bit (Code protection off)

void SetPWMDutyCycle(unsigned int DutyCycle)
{
    CCPR1L = DutyCycle>>2;
    CCP1CON = CCP1CON & 0xCF;
    CCP1CON = CCP1CON | (0x30&(DutyCycle<<4));
}

void main()
{
    TRISC = 0x00;
    CCP1CON = 0x0C;
    PR2 = 0xFF;
    T2CON = 0x04;
    int i = 0;
    while (1)
    {
        for (i = 0; i<1023; i++)
        {
            SetPWMDutyCycle(i);
            __delay_ms(2);
        }
        for (i = 1023; i>0; i--)
        {
            SetPWMDutyCycle(i);
            __delay_ms(2);
        }
    }
}